#include <Adafruit_MPU6050.h>
#include <Adafruit_Sensor.h>
#include <Wire.h>

#include "BluetoothSerial.h"

BluetoothSerial SerialBT;

Adafruit_MPU6050 mpu;

#define X_ACC_OFF 0
#define Y_ACC_OFF 0
#define Z_ACC_OFF 0

#define X_GYR_OFF 0.05575
#define Y_GYR_OFF 0.0067
#define Z_GYR_OFF -0.00189

#define SDA_PIN 21
#define SCL_PIN 22

void setup(void)
{
  Serial.begin(115200);
  SerialBT.begin("esp32-airmouse");
  while (!Serial)
    delay(10); // will pause Zero, Leonardo, etc until serial console opens

  Wire.begin(SDA_PIN, SCL_PIN);
  Serial.println("Adafruit MPU6050 test!");

  // Try to initialize!
  if (!mpu.begin())
  {
    Serial.println("Failed to find MPU6050 chip");
    while (1)
    {
      delay(10);
    }
  }
  Serial.println("MPU6050 Found!");

  mpu.setAccelerometerRange(MPU6050_RANGE_8_G);
  Serial.print("Accelerometer range set to: ");
  switch (mpu.getAccelerometerRange())
  {
  case MPU6050_RANGE_2_G:
    Serial.println("+-2G");
    break;
  case MPU6050_RANGE_4_G:
    Serial.println("+-4G");
    break;
  case MPU6050_RANGE_8_G:
    Serial.println("+-8G");
    break;
  case MPU6050_RANGE_16_G:
    Serial.println("+-16G");
    break;
  }
  mpu.setGyroRange(MPU6050_RANGE_500_DEG);
  Serial.print("Gyro range set to: ");
  switch (mpu.getGyroRange())
  {
  case MPU6050_RANGE_250_DEG:
    Serial.println("+- 250 deg/s");
    break;
  case MPU6050_RANGE_500_DEG:
    Serial.println("+- 500 deg/s");
    break;
  case MPU6050_RANGE_1000_DEG:
    Serial.println("+- 1000 deg/s");
    break;
  case MPU6050_RANGE_2000_DEG:
    Serial.println("+- 2000 deg/s");
    break;
  }

  mpu.setFilterBandwidth(MPU6050_BAND_10_HZ);
  Serial.print("Filter bandwidth set to: ");
  switch (mpu.getFilterBandwidth())
  {
  case MPU6050_BAND_260_HZ:
    Serial.println("260 Hz");
    break;
  case MPU6050_BAND_184_HZ:
    Serial.println("184 Hz");
    break;
  case MPU6050_BAND_94_HZ:
    Serial.println("94 Hz");
    break;
  case MPU6050_BAND_44_HZ:
    Serial.println("44 Hz");
    break;
  case MPU6050_BAND_21_HZ:
    Serial.println("21 Hz");
    break;
  case MPU6050_BAND_10_HZ:
    Serial.println("10 Hz");
    break;
  case MPU6050_BAND_5_HZ:
    Serial.println("5 Hz");
    break;
  }

  Serial.println("");
  delay(100);
}

void loop()
{

  /* Get new sensor events with the readings */
  sensors_event_t a, g, temp;
  mpu.getEvent(&a, &g, &temp);

  /* Print out the values */
  Serial.print("{\"a\":[");
  Serial.print(a.acceleration.x-X_ACC_OFF);
  Serial.print(",");
  Serial.print(a.acceleration.y-Y_ACC_OFF);
  Serial.print(",");
  Serial.print(a.acceleration.z-Z_ACC_OFF);
  Serial.print("],");
  Serial.print("\"g\":[");
  Serial.print(g.gyro.x-X_GYR_OFF);
  Serial.print(",");
  Serial.print(g.gyro.y-Y_GYR_OFF);
  Serial.print(",");
  Serial.print(g.gyro.z-Z_GYR_OFF);
  Serial.println("]}");

  SerialBT.print("{\"a\":[");
  SerialBT.print(a.acceleration.x-X_ACC_OFF);
  SerialBT.print(",");
  SerialBT.print(a.acceleration.y-Y_ACC_OFF);
  SerialBT.print(",");
  SerialBT.print(a.acceleration.z-Z_ACC_OFF);
  SerialBT.print("],");
  SerialBT.print("\"g\":[");
  SerialBT.print(g.gyro.x-X_GYR_OFF);
  SerialBT.print(",");
  SerialBT.print(g.gyro.y-Y_GYR_OFF);
  SerialBT.print(",");
  SerialBT.print(g.gyro.z-Z_GYR_OFF);
  SerialBT.println("]}");

  delay(5);
}